// 1️⃣ When the "Register" button is pressed, the user is redirected to the registration page
document.getElementById("signup-btn").addEventListener("click", function () {
  sessionStorage.setItem("fromWelcomePage", "true");
  window.location.href = "02-Signup-Page.html";
});

// 2️⃣ When the "Login" button is pressed, the user is redirected to the login page
document.getElementById("login-btn").addEventListener("click", function () {
  sessionStorage.setItem("fromWelcomePage", "true");
  if (sessionStorage.getItem("fromSignupPage")) {
    sessionStorage.removeItem("fromSignupPage");
  }
  window.location.href = "03-Login-Page.html";
});

// 3️⃣ When you press the "Start Test" button, redirect to the registration page
document
  .getElementById("start-quiz-btn")
  .addEventListener("click", function () {
    sessionStorage.setItem("fromWelcomePage", "true");
    window.location.href = "02-Signup-Page.html";
  });

// 4️⃣ Check login status and hide "Register" and "Login" buttons if the user is logged in
const userSession = JSON.parse(sessionStorage.getItem("userSession") || "{}");
const loggedIn = userSession.loggedIn || false;

if (loggedIn) {
  sessionStorage.setItem("loggedIn", "true");
  document.getElementById("signup-btn").style.visibility = "hidden";
  document.getElementById("login-btn").style.visibility = "hidden";
}

document
  .getElementById("burger-menu-btn")
  .addEventListener("click", function () {
    document.getElementById("sidebar").classList.toggle("active");
  });
  // 6️⃣ Hide side menu when clicking anywhere outside it
window.addEventListener("click", function (event) {
  const sidebar = document.getElementById("sidebar");
  const burgerMenuBtn = document.getElementById("burger-menu-btn");
  if (
    !sidebar.contains(event.target) &&
    !burgerMenuBtn.contains(event.target)
  ) {
    sidebar.classList.remove("active");
  }
});

window.addEventListener("scroll", function () {
  const navbar = document.querySelector("header");
  navbar.classList.toggle("sticky", window.scrollY > 0);
});

function fetchYouTubeResources(keyword) {
  const apiKey = ""; /* AIzaSyAXwvRI2RwwVrYClXEKAfpvhnJdB8Ea4NE */
  /* AIzaSyDjk6EfYu7fw1Xh2loDzhAne5e6R7xCRYk */
  const url = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${keyword}+concepts&type=video&maxResults=10&key=${apiKey}`;

  fetch(url)
    .then((response) => response.json())
    .then((data) => {
      const resources = data.items;
      const randomResources = [];
      while (randomResources.length < 3) {
        const randomIndex = Math.floor(Math.random() * resources.length);
        if (!randomResources.includes(resources[randomIndex])) {
          randomResources.push(resources[randomIndex]);
        }
      }
      randomResources.forEach((resource, index) => {
        const resourceBox = document.getElementById(`resource${index + 1}`);
        const videoTitle = resource.snippet.title
          .split(" ")
          .slice(0, 5)
          .join(" ");
        const videoLink = `https://www.youtube.com/embed/${resource.id.videoId}`;

        resourceBox.innerHTML = `
          <iframe class="video-thumb" src="${videoLink}" frameborder="0" allowfullscreen></iframe>
          <p class="video-title">${videoTitle}</p>
        `; /* <p class="video-title"><a href="${videoLink}">${videoTitle}</a></p> */
      });
    })
    .catch((error) =>
      console.error("Error fetching YouTube resources:", error)
    );
}
//  Extract keyword and perform search
const keyword =
  userSession.topic || sessionStorage.getItem("topic") || "communication";
fetchYouTubeResources(keyword);
